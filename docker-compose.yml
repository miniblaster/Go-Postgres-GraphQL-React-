version: "3"

volumes:
  postgres-data:
    driver: "local"

networks:
  local:
    driver: "bridge"

services:
  postgres:
    image: ghcr.io/bhidapa/heltin-postgres
    build:
      context: .
      dockerfile: ./database/Dockerfile
    networks:
      - local
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "psql --set=ON_ERROR_STOP=1 --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB --command='select 1 from public.user;' > /dev/null 2>&1",
        ]
      timeout: 3s
      interval: 6s
      retries: 3
    command:
      - postgres
      - -c
      - jit=off
  graphql:
    image: ghcr.io/bhidapa/heltin-graphql
    build:
      context: .
      dockerfile: ./cmd/graphql/Dockerfile
    networks:
      - local
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_SCHEMAS=${POSTGRES_SCHEMAS}
      - POSTGRES_SESSION_TABLE_SCHEMA=${POSTGRES_SESSION_TABLE_SCHEMA}
      - SESSION_SECRET=${SESSION_SECRET}
      - GRAPHQL_ROUTE=/graphql
      - GRAPHIQL_ROUTE=/graphiql
      - PORT=${GRAPHQL_PORT}
    depends_on:
      - postgres
  server:
    image: ghcr.io/bhidapa/heltin-server
    build:
      context: .
      dockerfile: ./cmd/server/Dockerfile
    networks:
      - local
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - SESSION_SECRET=${SESSION_SECRET}
      - GOTENBERG_HOST=gotenberg
      - GOTENBERG_PORT=${GOTENBERG_PORT}
      - GRAPHQL_ENDPOINT=http://graphql:${GRAPHQL_PORT}/graphql
    depends_on:
      - graphql
  gotenberg:
    image: thecodingmachine/gotenberg:7
    networks:
      - local
    environment:
      - GOTENBERG_PORT=${GOTENBERG_PORT}
    command:
      - "gotenberg"
      - "--api-port-from-env=GOTENBERG_PORT"
